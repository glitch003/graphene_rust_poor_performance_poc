
libos.entrypoint = "poc"

# LibOS layer library of Graphene. There is currently only one implementation, so it is always set
# to libsysdb.so.
loader.preload = "file:/usr/local/lib/x86_64-linux-gnu/graphene/libsysdb.so"

# Request remote attestation functionality from Graphene
# sgx.remote_attestation = true


# Graphene log level
loader.log_level = "error"
#loader.log_level = "debug"

# Read application arguments directly from the command line. Don't use this on production!
loader.insecure__use_cmdline_argv = true

# Forward environment variables from the host. Don't use this on production!
loader.insecure__use_host_env = true

# Node.js requires eventfd2() emulation otherwise fails on `(uv_loop_init(&tracing_loop_)) == (0)'
sys.insecure__allow_eventfd = true

# Specify paths to search for libraries. The usual LD_LIBRARY_PATH syntax applies. Paths must be in-
# Graphene visible paths, not host-OS paths (i.e., paths must be taken from fs.mount.xxx.path, not
# fs.mount.xxx.uri).
loader.env.LD_LIBRARY_PATH = "/lib:/lib/x86_64-linux-gnu:/usr//lib/x86_64-linux-gnu:/libs"

# Allow for injecting SIGTERM signal from the host.
sys.enable_sigterm_injection = true

# Mount the nodejs binary
fs.mount.nodejs.type = "chroot"
fs.mount.nodejs.path = "/usr/bin/nodejs"
fs.mount.nodejs.uri = "file:/usr/bin/nodejs"

# Mount host-OS directory to required libraries (in 'uri') into in-Graphene visible directory /lib
# (in 'path').
fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:/usr/local/lib/x86_64-linux-gnu/graphene/runtime/glibc"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "/lib/x86_64-linux-gnu"
fs.mount.lib2.uri = "file:/lib/x86_64-linux-gnu"

fs.mount.lib3.type = "chroot"
fs.mount.lib3.path = "/usr//lib/x86_64-linux-gnu"
fs.mount.lib3.uri = "file:/usr//lib/x86_64-linux-gnu"

fs.mount.etc.type = "chroot"
fs.mount.etc.path = "/etc"
fs.mount.etc.uri = "file:/etc"

# Set enclave size to 2GB. Recall that SGX v1 requires to specify enclave size at enclave creation
# time.
sgx.enclave_size = "1G"

# Set maximum number of in-enclave threads to 32. Recall that SGX v1 requires to specify the maximum
# number of simultaneous threads at enclave creation time.
sgx.thread_num = 20
#sgx.rpc_thread_num = 20

sgx.preheat_enclave = true


# Specify all files used by Node.js and its dependencies (including all libs which can be loaded at
# runtime via dlopen).
sgx.trusted_files.runtime = "file:/usr/local/lib/x86_64-linux-gnu/graphene/runtime/glibc/"
sgx.trusted_files.arch_libdir = "file:/lib/x86_64-linux-gnu/"
sgx.trusted_files.usr_arch_libdir = "file:/usr//lib/x86_64-linux-gnu/"

# Input
sgx.trusted_files.main_bin = "file:poc"


# Name Service Switch (NSS) files. Glibc reads these files as part of name-
# service information gathering. For more info, see 'man nsswitch.conf'.
sgx.allowed_files.nsswitch = "file:/etc/nsswitch.conf"
sgx.allowed_files.hostconf = "file:/etc/host.conf"
sgx.allowed_files.resolvconf = "file:/etc/resolv.conf"
sgx.allowed_files.ethers = "file:/etc/ethers"
sgx.allowed_files.hosts = "file:/etc/hosts"
sgx.allowed_files.group = "file:/etc/group"
sgx.allowed_files.passwd = "file:/etc/passwd"
sgx.allowed_files.gaiconf = "file:/etc/gai.conf"
sgx.allowed_files.opensslcnf = "file:/etc/ssl/openssl.cnf"
sgx.allowed_files.certs = "file:/etc/ssl/certs/ca-certificates.crt"
